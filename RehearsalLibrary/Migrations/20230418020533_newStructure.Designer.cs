// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RehearsalLibrary.Base;

#nullable disable

namespace RehearsalLibrary.Migrations
{
    [DbContext(typeof(RehearshalSqlBase))]
    [Migration("20230418020533_newStructure")]
    partial class newStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("RehearsalLibrary.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Client");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RehearsalLibrary.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudioClientId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudioClientId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("RehearsalLibrary.Entities.GroupEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdditionMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EntryEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntryStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("EntryStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntryType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RehearsalHourCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("GroupEntries");
                });

            modelBuilder.Entity("RehearsalLibrary.Entities.IndividualEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdditionMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EntryEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntryStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("EntryStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntryType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RehearsalHourCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("IndividualEntries");
                });

            modelBuilder.Entity("RehearsalLibrary.Entities.VocalEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdditionMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EntryEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntryStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("EntryStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntryType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RehearsalHourCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("VocalEntries");
                });

            modelBuilder.Entity("RehearsalLibrary.Entities.StudioClient", b =>
                {
                    b.HasBaseType("RehearsalLibrary.Entities.Client");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("StudioClient");
                });

            modelBuilder.Entity("RehearsalLibrary.Entities.Comment", b =>
                {
                    b.HasOne("RehearsalLibrary.Entities.Client", "StudioClient")
                        .WithMany("Comments")
                        .HasForeignKey("StudioClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudioClient");
                });

            modelBuilder.Entity("RehearsalLibrary.Entities.GroupEntry", b =>
                {
                    b.HasOne("RehearsalLibrary.Entities.Client", "Client")
                        .WithMany("GroupEntries")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RehearsalLibrary.Entities.IndividualEntry", b =>
                {
                    b.HasOne("RehearsalLibrary.Entities.Client", "Client")
                        .WithMany("IndividualEntries")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RehearsalLibrary.Entities.VocalEntry", b =>
                {
                    b.HasOne("RehearsalLibrary.Entities.Client", "Client")
                        .WithMany("VocalEntries")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RehearsalLibrary.Entities.Client", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("GroupEntries");

                    b.Navigation("IndividualEntries");

                    b.Navigation("VocalEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
